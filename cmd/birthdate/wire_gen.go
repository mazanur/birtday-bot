// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"context"
	"github.com/almaznur91/splitty/internal/bot"
	"github.com/almaznur91/splitty/internal/events"
	"github.com/almaznur91/splitty/internal/handler"
	"github.com/almaznur91/splitty/internal/repository"
	"github.com/almaznur91/splitty/internal/service"
	"github.com/google/wire"
)

// Injectors from wire.go:

func initApp(ctx context.Context, cfg *config) (*events.TelegramListener, func(), error) {
	botConfig := initBotConfig(cfg)
	botAPI, err := initTelegramApi(cfg, botConfig)
	if err != nil {
		return nil, nil, err
	}
	database, cleanup, err := initMongoConnection(ctx, cfg)
	if err != nil {
		return nil, nil, err
	}
	mongoChatStateRepository := repository.NewChatStateRepository(database)
	chatStateService := service.NewChatStateService(mongoChatStateRepository)
	mongoButtonRepository := repository.NewButtonRepository(database)
	buttonService := service.NewButtonService(mongoButtonRepository)
	mongoUserRepository := repository.NewUserRepository(database)
	userService := service.NewUserService(mongoUserRepository)
	startScreen := bot.NewStartScreen(chatStateService, buttonService, userService, botConfig)
	roomCreating := bot.NewRoomCreating(chatStateService, buttonService, botConfig)
	mongoRoomRepository := repository.NewRoomRepository(database)
	roomService := service.NewRoomService(mongoRoomRepository)
	roomSetName := bot.NewRoomSetName(chatStateService, buttonService, roomService, botConfig)
	v := ProvideBotList(startScreen, roomCreating, roomSetName)
	errorHandler := handler.NewErrorHandler()
	telegramListener, err := initTelegramConfig(botAPI, v, buttonService, userService, chatStateService, errorHandler)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	return telegramListener, func() {
		cleanup()
	}, nil
}

// wire.go:

var bots = wire.NewSet(bot.NewStartScreen, bot.NewRoomSetName, bot.NewRoomCreating)

func ProvideBotList(b2 *bot.StartScreen, b3 *bot.RoomCreating, b4 *bot.RoomSetName) []bot.Interface {
	return []bot.Interface{b2, b3, b4}
}
